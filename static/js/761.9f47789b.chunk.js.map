{"version":3,"file":"static/js/761.9f47789b.chunk.js","mappings":"oQAGaA,EAASC,EAAAA,GAAAA,OAAH,2OAeNC,EAAeD,EAAAA,GAAAA,IAAH,8EAMZE,EAAMF,EAAAA,GAAAA,IAAH,iEAKHG,EAAQH,EAAAA,GAAAA,GAAH,sEAILI,EAAOJ,EAAAA,GAAAA,EAAH,6CAIJK,EAAYL,EAAAA,GAAAA,GAAH,mEAKTM,EAAON,EAAAA,GAAAA,GAAH,oFAMJO,GAAOP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,8H,SC3CF,SAASS,IAAgB,IAAD,IAC/BC,GAAWC,EAAAA,EAAAA,MACXC,ECHwB,WAC9B,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOH,EAAP,KAAcI,EAAd,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBL,GAASM,KAAKH,EAClC,GAAE,CAACH,IAEGD,CACR,CDLeQ,GAEd,OACE,iCACE,SAACb,EAAD,CAAMc,GAAE,iBAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUY,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,UACM,SAACxB,EAAD,CAAQyB,KAAK,SAAb,uBAKCZ,IACH,UAACX,EAAD,YACE,SAACC,EAAD,CACEuB,IAAK,mCAAqCb,EAAMc,YAChDC,IAAKf,EAAMgB,SAGb,4BACE,UAACzB,EAAD,WACGS,EAAMgB,MADT,IACiBhB,EAAMiB,aAAaC,MAAM,EAAG,GAD7C,QAGA,UAAC1B,EAAD,0BAAwC,GAArBQ,EAAMmB,aAAzB,QACA,SAAC1B,EAAD,wBACA,SAACD,EAAD,UAAOQ,EAAMoB,YACb,SAAC3B,EAAD,qBACCO,EAAMqB,OAAOC,KAAI,SAAAC,GAAK,OACrB,SAAC/B,EAAD,UAAsB+B,EAAMC,MAAjBD,EAAME,GADI,WAM3B,4BACE,SAAChC,EAAD,sCACA,UAACC,EAAD,YACQ,SAACC,EAAD,CAAMc,GAAG,OAAOC,MAAOZ,EAASY,MAAhC,mBAEA,SAACf,EAAD,CAAMc,GAAG,UAAUC,MAAOZ,EAASY,MAAnC,yBAER,SAAC,KAAD,SAMX,C,qLE9CKgB,E,OAAMC,EAAAA,OAAa,CAAEC,QAFf,gCAE6BC,OAAQ,CAAEC,QAHnC,sCAKHC,EAAmB,mCAAG,oGACVL,EAAIM,IAAI,sBADE,cAC3BC,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAIM,IAAJ,6BAA8BK,IADtB,cACzBJ,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjB7B,EAAkB,mCAAG,WAAMmB,GAAN,uFACTC,EAAIM,IAAJ,gBAAiBP,IADR,cAC1BQ,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,sDAKlBI,EAAkB,mCAAG,WAAMb,GAAN,uFACTC,EAAIM,IAAJ,gBAAiBP,EAAjB,aADS,cAC1BQ,EAD0B,yBAEzBA,EAASC,KAAKK,MAFW,2CAAH,sDAKlBC,EAAkB,mCAAG,WAAMf,GAAN,uFACTC,EAAIM,IAAJ,gBAAiBP,EAAjB,aADS,cAC1BQ,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled..js","pages/MovieDetails/MovieDetails.jsx","hooks/useMoviesDetails.js","services/movies.API.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-weight: 800;\n  margin: 10px;\n  border: 1px solid grey;\n  color: black;\n  &:hover,\n  &:focus,\n  &.active {\n    color: #9c27b0;\n  }\n`;\n\nexport const ContainerImg = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-left: 10px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h2`\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Text = styled.p`\n  margin-top: 15px;\n`;\n\nexport const TitleText = styled.h3`\n  margin-top: 30px;\n  margin-left: 10px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const Link = styled(NavLink)`\n  font-weight: 700;\n  color: black;\n  &:hover,\n  &:focus,\n  &.active {\n    color: #9c27b0;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useMoviesDetails } from 'hooks/useMoviesDetails';\nimport { Link, Button, ContainerImg, Img, Title, Text, TitleText, List } from './MovieDetails.styled.';\n\nexport default function MovieDetails() {\n  const location = useLocation()\n  const movie = useMoviesDetails();\n  \n  return (\n    <> \n      <Link to={location?.state?.from ?? \"/\"}> \n            <Button type=\"button\">\n                Go back\n            </Button>\n        </Link>\n       \n            {movie && (\n          <ContainerImg>\n            <Img\n              src={'https://image.tmdb.org/t/p/w500/' + movie.poster_path}\n              alt={movie.title}\n            />\n\n            <div>\n              <Title>\n                {movie.title}({movie.release_date.slice(0, 4)})\n              </Title>\n              <Text>User Score: {movie.vote_average * 10}%</Text>\n              <TitleText>Overview</TitleText>\n              <Text>{movie.overview}</Text>\n              <TitleText>Genres</TitleText>\n              {movie.genres.map(genre => (\n                <Text key={genre.id}>{genre.name}</Text>\n              ))}\n            </div>\n          </ContainerImg>\n          )}\n          <div>\n            <TitleText>Additional information</TitleText>\n            <List>\n                    <Link to=\"cast\" state={location.state}>Cast</Link>\n              \n                    <Link to=\"reviews\" state={location.state}>Reviews</Link>                \n            </List>\n            <Outlet/>\n        </div>\n     \n   \n    </>\n  )\n}\n\n\n\n\n\n\n\n\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesDetails } from 'services/movies.API';\nimport { useParams } from 'react-router-dom';\n\nexport const useMoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    fetchMoviesDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  return movie;\n};\n","import axios from 'axios';\n\nconst api_key = '58ada184fb3121c1b6ebca2f5648a978';\nconst URL = 'https://api.themoviedb.org/3/';\n\nconst api = axios.create({ baseURL: URL, params: { api_key } });\n\nexport const fetchMoviesTrending = async () => {\n  const response = await api.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesSearch = async query => {\n  const response = await api.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const response = await api.get(`movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const response = await api.get(`movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await api.get(`movie/${id}/reviews`);\n  return response.data.results;\n};\n"],"names":["Button","styled","ContainerImg","Img","Title","Text","TitleText","List","Link","NavLink","MovieDetails","location","useLocation","movie","movieId","useParams","useState","setMovie","useEffect","fetchMoviesDetails","then","useMoviesDetails","to","state","from","type","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","genre","name","id","api","axios","baseURL","params","api_key","fetchMoviesTrending","get","response","data","results","fetchMoviesSearch","query","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}