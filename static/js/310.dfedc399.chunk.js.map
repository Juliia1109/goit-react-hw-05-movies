{"version":3,"file":"static/js/310.dfedc399.chunk.js","mappings":"gQAGaA,EAAOC,EAAAA,GAAAA,KAAH,0EAMJC,EAAQD,EAAAA,GAAAA,MAAH,6DAKLE,EAASF,EAAAA,GAAAA,OAAH,iOAcNG,EAAOH,EAAAA,GAAAA,GAAH,6DAKJI,EAAOJ,EAAAA,GAAAA,GAAH,gDAIJK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,kT,SC/BF,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAkBH,GAAOI,KAAKR,EACzB,GAAE,CAACI,IAQV,OAEE,iCACA,UAACjB,EAAD,CAAMsB,SATe,SAACC,GAClBA,EAAEC,iBACFR,EAAgB,CAAEC,MAAOM,EAAEE,cAAcC,SAAST,MAAMU,MAAMC,SAC9DL,EAAEM,OAAOC,OACZ,EAKD,WACC,SAAC5B,EAAD,CAAO6B,KAAK,QAAQC,KAAK,UACzB,SAAC7B,EAAD,CAAQ6B,KAAK,SAAb,uBAEApB,IACF,SAACR,EAAD,UACDQ,EAAOqB,KAAI,SAAAC,GAAK,OACb,SAAC7B,EAAD,WACG,SAACC,EAAD,CAAM6B,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM7B,GAAxC,SAAqDyB,EAAMK,SADnDL,EAAME,GADJ,QAUjB,C,qLCtCKI,E,OAAMC,EAAAA,OAAa,CAAEC,QAFf,gCAE6BC,OAAQ,CAAEC,QAHnC,sCAKHC,EAAmB,mCAAG,oGACVL,EAAItB,IAAI,sBADE,cAC3B4B,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnB5B,EAAiB,mCAAG,WAAMH,GAAN,uFACRuB,EAAItB,IAAJ,6BAA8BD,IADtB,cACzB6B,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjBC,EAAkB,mCAAG,WAAMb,GAAN,uFACTI,EAAItB,IAAJ,gBAAiBkB,IADR,cAC1BU,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,sDAKlBG,EAAkB,mCAAG,WAAMd,GAAN,uFACTI,EAAItB,IAAJ,gBAAiBkB,EAAjB,aADS,cAC1BU,EAD0B,yBAEzBA,EAASC,KAAKI,MAFW,2CAAH,sDAKlBC,EAAkB,mCAAG,WAAMhB,GAAN,uFACTI,EAAItB,IAAJ,gBAAiBkB,EAAjB,aADS,cAC1BU,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qD","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/movies.API.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  padding: 15px;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  font-size: 15px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-weight: 700;\n  font-size: 15px;\n  border: 1px solid grey;\n  color: black;\n  &:hover,\n  &:focus {\n    color: #9c27b0;\n  }\n`;\n\nexport const List = styled.ul`\n  display: block;\n  padding: 15px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: black;\n  font-weight: 700;\n  &:hover,\n  &:focus {\n    color: #9c27b0;\n  }\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n  text-decoration: none;\n`;\n","import { fetchMoviesSearch } from 'services/movies.API';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Form, Input, Button, List, Item, Link } from './Movies.styled';\n\n\nexport default function Movies() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    \n    fetchMoviesSearch(query).then(setMovies);\n        }, [query]);\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setSearchParams({ query: e.currentTarget.elements.query.value.trim() });\n        e.target.reset();\n    }\n\n  return (\n\n    <>\n    <Form onSubmit={handleSubmit}>\n     <Input name=\"query\" type=\"text\" />\n     <Button type=\"submit\">Search</Button>\n    </Form>\n    {movies && (\n   <List>\n {movies.map(movie => (\n     <Item key={movie.id}>\n        <Link to={`${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n     </Item>\n ))}\n  </List>\n  )}\n    </>\n\n  )\n}\n","import axios from 'axios';\n\nconst api_key = '58ada184fb3121c1b6ebca2f5648a978';\nconst URL = 'https://api.themoviedb.org/3/';\n\nconst api = axios.create({ baseURL: URL, params: { api_key } });\n\nexport const fetchMoviesTrending = async () => {\n  const response = await api.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesSearch = async query => {\n  const response = await api.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const response = await api.get(`movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const response = await api.get(`movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await api.get(`movie/${id}/reviews`);\n  return response.data.results;\n};\n"],"names":["Form","styled","Input","Button","List","Item","Link","NavLink","Movies","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesSearch","then","onSubmit","e","preventDefault","currentTarget","elements","value","trim","target","reset","name","type","map","movie","to","id","state","from","title","api","axios","baseURL","params","api_key","fetchMoviesTrending","response","data","results","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}