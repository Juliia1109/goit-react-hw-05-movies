{"version":3,"file":"static/js/370.46dd985c.chunk.js","mappings":"wPAEaA,EAAOC,EAAAA,GAAAA,GAAH,+GAOJC,EAAOD,EAAAA,GAAAA,GAAH,uNAOJE,EAAMF,EAAAA,GAAAA,IAAH,yCAIHG,EAAYH,EAAAA,GAAAA,IAAH,oGAKTI,EAAQJ,EAAAA,GAAAA,GAAH,mIAOLK,EAAOL,EAAAA,GAAAA,GAAH,gE,SC7BF,SAASM,IACtB,IAAMC,ECAwB,WAC9B,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBN,GAASO,KAAKH,EAClC,GAAE,CAACJ,IAEGG,CACR,CDRgBK,GACf,OACE,8BACGT,IACC,0BACE,SAACR,EAAD,UACGQ,EAAOU,KAAI,SAACC,EAAOC,GAAR,OACV,UAAClB,EAAD,WACGiB,EAAME,cACL,SAAClB,EAAD,CACEmB,IACE,mCAAqCH,EAAME,aAE7CE,IAAKJ,EAAMK,QAGb,SAACpB,EAAD,8CAGF,SAACC,EAAD,UAAQc,EAAMM,aACd,SAACnB,EAAD,UAAOa,EAAMK,SAbJJ,EADD,SAsBvB,C,qLE3BKM,E,OAAMC,EAAAA,OAAa,CAAEC,QAFf,gCAE6BC,OAAQ,CAAEC,QAHnC,sCAKHC,EAAmB,mCAAG,oGACVL,EAAIM,IAAI,sBADE,cAC3BC,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAIM,IAAJ,6BAA8BK,IADtB,cACzBJ,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjBG,EAAkB,mCAAG,WAAMC,GAAN,uFACTb,EAAIM,IAAJ,gBAAiBO,IADR,cAC1BN,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,sDAKlBnB,EAAkB,mCAAG,WAAMwB,GAAN,uFACTb,EAAIM,IAAJ,gBAAiBO,EAAjB,aADS,cAC1BN,EAD0B,yBAEzBA,EAASC,KAAKtB,MAFW,2CAAH,sDAKlB4B,EAAkB,mCAAG,WAAMD,GAAN,uFACTb,EAAIM,IAAJ,gBAAiBO,EAAjB,aADS,cAC1BN,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qD","sources":["components/pages/Cast/Cast.styled.js","components/pages/Cast/Cast.jsx","hooks/useMoviesCredits.js","services/movies.API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.li`\n  border-radius: 10px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n\nexport const Container = styled.div`\n  width: 200px;\n  height: 300px;\n  background-color: rgba(0, 0, 0, 0.3);\n`;\nexport const Title = styled.h3`\n  max-width: 200px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 650;\n  margin: 10px auto;\n`;\nexport const Text = styled.h4`\n  text-align: center;\n  margin: 10px;\n`;\n","import { useMoviesCredits } from 'hooks/useMoviesCredits';\nimport { List, Item, Img, Container, Title, Text } from './Cast.styled';\n\nexport default function Cast() {\n  const actors = useMoviesCredits();\n  return (\n    <>\n      {actors && (\n        <div>\n          <List>\n            {actors.map((actor, index) => (\n              <Item key={index}>\n                {actor.profile_path ? (\n                  <Img\n                    src={\n                      'https://image.tmdb.org/t/p/w500/' + actor.profile_path\n                    }\n                    alt={actor.name}\n                  />\n                ) : (\n                  <Container>\n                  There is no cast in this film!</Container>\n                )}\n                <Title>{actor.character}</Title>\n                <Text>{actor.name}</Text>\n              </Item>\n            ))}\n          </List>\n        </div>\n      )}\n    </>\n  );\n}\n\n\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesCredits } from 'services/movies.API';\nimport { useParams } from 'react-router-dom';\n\nexport const useMoviesCredits = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchMoviesCredits(movieId).then(setCast);\n  }, [movieId]);\n\n  return cast;\n};\n","import axios from 'axios';\n\nconst api_key = '58ada184fb3121c1b6ebca2f5648a978';\nconst URL = 'https://api.themoviedb.org/3/';\n\nconst api = axios.create({ baseURL: URL, params: { api_key } });\n\nexport const fetchMoviesTrending = async () => {\n  const response = await api.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesSearch = async query => {\n  const response = await api.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const response = await api.get(`movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const response = await api.get(`movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await api.get(`movie/${id}/reviews`);\n  return response.data.results;\n};\n"],"names":["List","styled","Item","Img","Container","Title","Text","Cast","actors","movieId","useParams","useState","cast","setCast","useEffect","fetchMoviesCredits","then","useMoviesCredits","map","actor","index","profile_path","src","alt","name","character","api","axios","baseURL","params","api_key","fetchMoviesTrending","get","response","data","results","fetchMoviesSearch","query","fetchMoviesDetails","id","fetchMoviesReviews"],"sourceRoot":""}